fail_fast: true
repos:
  - repo: local
    hooks:
      - id: ruff-format
        name: Python format
        description: Run Python code formatting with ruff
        entry: uv run ruff format
        language: system
        types: [file, python]
        stages: [pre-commit]

      - id: ruff-lint
        name: Python lint check
        description: Run Python code linting with ruff
        entry: uv run ruff check --fix
        language: system
        types: [file, python]
        stages: [pre-commit]

      - id: pyright
        name: Python type check
        description: Run Python code type checking with pyright
        entry: uv run pyright
        language: system
        types: [file, python]
        stages: [pre-commit]

      - id: check-yaml
        name: YAML check
        description: Validate all changed YAML files
        entry: uv run check-yaml
        language: python
        types: [yaml]
        stages: [pre-commit]
        exclude: ^mkdocs\.yml$

      - id: check-toml
        name: TOML check
        description: Validate all changed TOML files
        entry: uv run check-toml
        language: python
        types: [toml]
        stages: [pre-commit]

      - id: check-json
        name: JSON check
        description: Validate all changed JSON files
        entry: uv run check-json
        language: python
        types: [json]
        stages: [pre-commit]

      - id: schemas
        name: Corsair schemas generation
        description: Generate all schemas
        entry: schemas/generate.sh
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

      - id: derived-docs
        name: Generation of derived documentation
        description: Generate all derived documentation
        entry: docs/generate.sh
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-commit]

      - id: commitizen
        name: Commit style check
        description: Run commitizen to validate commit message
        stages: [commit-msg]
        entry: uv run cz check --commit-msg-file .git/COMMIT_EDITMSG
        pass_filenames: false
        language: system

      - id: uv-lock
        name: UV lock update
        description: Run uv lock to update lock file
        entry: uv lock
        language: python
        pass_filenames: false
        files: ^(.*/)?(uv\.lock|pyproject\.toml)$

      - id: pytest
        name: Pytest smoke testing
        description: Run pytest to execute all smoke tests
        entry: uv run pytest -m "not large"
        language: system
        pass_filenames: false
        stages: [pre-commit]
        always_run: true
